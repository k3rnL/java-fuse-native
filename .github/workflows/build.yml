name: Build project

permissions:
  contents: write  # Set permissions for GitHub release access

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Match tags like 1.0.0, 2.1.3, etc.

jobs:
  build-native:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install FUSE3
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse3 libfuse3-dev

      - name: Build the project
        run: |
          mvn package -Pbuild-examples

      - name: Create source JAR
        run: |
          mvn source:jar

      - name: Archive JARs
        uses: actions/upload-artifact@v3
        with:
          name: JARs
          path: target/fuse-native-*.jar

      - name: Archive example
        uses: actions/upload-artifact@v3
        with:
          name: examples
          path: target/memory-fs

  release:
    runs-on: ubuntu-latest
    needs: build-native
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all JAR artifacts
        uses: actions/download-artifact@v3
        with:
          name: JARs
          path: ./artifacts/JARs

      - name: Download example artifacts
        uses: actions/download-artifact@v3
        with:
          name: examples
          path: ./artifacts/examples

      - name: Zip artifacts
        run: |
          zip -r artifacts/jars.zip ./artifacts/JARs

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: "Release for tag ${{ github.ref_name }}"
          draft: false
          prerelease: false

      # Upload individual files
      - name: Upload individual JAR files to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/JARs/*
          asset_name: fuse-native-jar
          asset_content_type: application/java-archive

      - name: Upload individual example files to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/examples/*
          asset_name: examples
          asset_content_type: application/octet-stream

      # Upload zip files
      - name: Upload JAR zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/jars.zip
          asset_name: fuse-native-jars.zip
          asset_content_type: application/zip
